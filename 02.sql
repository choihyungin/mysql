SELECT SAL*0.5, ROUND(SAL*0.5, 0) FROM EMP;

-- SUBSTR(KEY, STARTINDEX, INDEX) FROM TABLE
SELECT SUBSTR(HIREDATE, 1, 10) FROM EMP;

SELECT * FROM EMP WHERE ENAME LIKE CONCAT('%', 'A', '%');

SELECT NOW();
SELECT DATE_FORMAT(NOW(), '%Y / %m / %d');

SELECT * FROM EMP;

SELECT *,
	IFNULL (COMM, 0),
	CASE DEPTNO
		WHEN 10 THEN '총무'
        WHEN 20 THEN '운영'
        ELSE '기타' END
	FROM EMP;
    
SELECT * FROM 제품;
SELECT MAX(재고량) FROM 제품;
SELECT * FROM 제품 WHERE 재고량 = (SELECT MAX(재고량) FROM 제품);

SELECT COUNT(나이) AS 전체고객수 FROM 고객;
SELECT COUNT(*) AS 전체고객수 FROM 고객;
SELECT COUNT(1) AS 전체고객수 FROM 고객;

SELECT COUNT(DISTINCT 제조업체) AS 제조업체수 FROM 제품;

SELECT * FROM EMP;
SELECT COUNT(EMPNO) AS 사원수 FROM EMP; -- 14
SELECT COUNT(EMPNO) FROM EMP WHERE MGR IS NOT NULL; -- 13
SELECT SUM(SAL) FROM EMP WHERE SAL <= 2000; -- 9750
SELECT COUNT(EMPNO) AS 사원수, AVG(SAL) AS 급여평균 FROM EMP WHERE JOB='MANAGER'; -- 3, 2758.33
SELECT MIN(SAL) FROM EMP; -- 800
SELECT MAX(SAL) FROM EMP WHERE DEPTNO=30; -- 2850
SELECT COUNT(DISTINCT JOB) AS 직무수 FROM EMP; -- 5

SELECT * FROM 제품;
SELECT 제조업체 FROM 제품 GROUP BY 제조업체; -- GROUP BY 한 속성만 사용할 수 있음

SELECT 등급, AVG(적립금) AS 적립금평균, COUNT(*) AS 고객수 FROM 고객 GROUP BY 등급 HAVING AVG(적립금) >= 1000;
SELECT 등급, ROUND(AVG(적립금), 0), COUNT(*) FROM 고객 GROUP BY 등급 HAVING AVG(적립금) >= 1000 ORDER BY 등급 DESC;

SELECT COUNT(EMPNO) AS 사원수, DEPTNO AS 부서번호 FROM EMP GROUP BY DEPTNO;
SELECT SUM(SAL) AS 급여합계, DEPTNO FROM EMP GROUP BY DEPTNO;
SELECT COUNT(*) AS 사원수, DEPTNO AS 부서, JOB AS 직무 FROM EMP GROUP BY DEPTNO, JOB;

CREATE TABLE NOODLE (
	NUM INT,
	NAME VARCHAR(50),
	COMPANY VARCHAR(10),
	KIND VARCHAR(1),
	PRICE INT,
	E_DATE DATETIME
);

DESC NOODLE;

INSERT INTO NOODLE VALUES (
 1, '안성탕면', '농심', 'M', 700, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 1, '김치라면', '삼양', 'M', 700, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 1, '진라면', '오뚜기', 'C', 800, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 1, '꼬꼬면', '팔도', 'C', 1000, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 2, '신라면', '농심', 'C', 1100, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 2, '삼양라면', '삼양', 'M', 700, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 3, '너구리', '농심', 'M', 850, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 3, '나가사키짬뽕', '삼양', 'C', 1300, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 4, '짜파게티', '농심', 'C', 1200, NOW() + INTERVAL 3 MONTH);
 
 SELECT * FROM NOODLE;
 
 SELECT COMPANY, CONCAT(COUNT(*), '개') AS COUNT FROM NOODLE GROUP BY COMPANY;
 SELECT COMPANY, CONCAT(COUNT(*), '개') AS COUNT FROM NOODLE GROUP BY COMPANY ORDER BY COUNT(*) ASC;
 SELECT COMPANY, CONCAT(COUNT(*), '개') AS COUNT FROM NOODLE GROUP BY COMPANY HAVING COUNT(*)>=3;
 SELECT NAME, COMPANY, DATE_FORMAT(E_DATE, '%Y년 %m월 %d일') FROM NOODLE WHERE KIND='M' AND PRICE >= 800;
 SELECT CONCAT(MAX(PRICE), '원') AS PRICE FROM NOODLE WHERE KIND='C';
 SELECT COMPANY, CONCAT(MIN(PRICE), '원') FROM NOODLE GROUP BY COMPANY;
 SELECT COMPANY, CONVERT(CONCAT(SUM(PRICE), '원') USING UTF8) AS 제조사별합계 FROM NOODLE GROUP BY COMPANY ORDER BY 제조사별합계 ASC;
 SELECT COMPANY, CONCAT(ROUND(AVG(PRICE), 0), '원') AS 제조사별평균 FROM NOODLE GROUP BY COMPANY ORDER BY 제조사별평균 DESC;
 SELECT COMPANY, CONCAT(ROUND(AVG(PRICE), 0), '원') AS 제조사별평균 FROM NOODLE GROUP BY COMPANY ORDER BY AVG(PRICE) DESC;